---
- name: Install PostgreSQL
  apt:
    name: 
      - postgresql
      - python3
      - python3-psycopg2
    state: present

- name: Ensure PostgreSQL is running
  service:
    name: "postgresql"
    state: started
    enabled: yes

- name: Replace scram-sha-256 with trust for IPv4
  ansible.builtin.replace:
    path: "{{ pg_hba_path }}"
    regexp: '^host\s+all\s+all\s+127.0.0.1/32\s+scram-sha-256'
    replace: 'host    all             all             127.0.0.1/32                 trust'
    backup: yes

- name: Reload PostgreSQL config
  ansible.builtin.service:
    name: postgresql
    state: reloaded
  
- name: Change postgres password
  become: yes
  community.postgresql.postgresql_user:
    name: "postgres"
    password: "postgres"
    encrypted: yes
    state: present
    login_user: postgres
    login_host: 127.0.0.1
    login_port: 5432
  environment:
    PGOPTIONS: "-c password_encryption=scram-sha-256"  


- name: Create replication user
  become: yes
  community.postgresql.postgresql_user:
    name: "{{ postgresql_replication_user }}"
    password: "{{ postgresql_replication_password }}"
    role_attr_flags: "REPLICATION,LOGIN"
    encrypted: yes
    state: present
    login_user: postgres
    login_host: 127.0.0.1
    login_port: 5432
  environment:
    PGOPTIONS: "-c password_encryption=scram-sha-256"  

- name: Configure PostgreSQL master server
  when: inventory_hostname == "db-master"
  block:
    - name: Create wiki user
      postgresql_user:
        name: "{{ postgresql_wiki_user }}"
        password: "{{ postgresql_wiki_password }}"
        role_attr_flags: "NOSUPERUSER,NOCREATEDB,NOCREATEROLE"
        encrypted: yes
        state: present
        login_user: postgres
        login_host: 127.0.0.1
        login_port: 5432
      environment:
        PGOPTIONS: "-c password_encryption=scram-sha-256"  

    - name: Create wiki database
      postgresql_db:
        name: "{{ postgresql_wiki_db }}"
        owner: "{{ postgresql_wiki_user }}"
        state: present
        login_user: postgres
        login_host: localhost
        login_port: 5432

    - name: Configure pg_hba.conf for replication
      lineinfile:
        path: "{{ pg_hba_path }}"
        line: "host replication {{ postgresql_replication_user }} 192.168.10.0/24 scram-sha-256"
        state: present

    - name: Configure postgresql.conf for master
      lineinfile:
        path: "{{ pg_conf_path }}"
        regexp: "^#?{{ item.key }}"
        line: "{{ item.key }} = {{ item.value }}"
      with_items:
        - { key: "listen_addresses", value: "'*'" }
        - { key: "wal_level", value: "replica" }

    - name: Restart PostgreSQL
      service:
        name: "postgresql"
        state: restarted



- name: Configure PostgreSQL standby servers
  when: inventory_hostname != "db-master"
  block:
    - name: Configure postgresql.conf for replica
      lineinfile:
        path: "{{ pg_conf_path }}"
        regexp: "^#?{{ item.key }}"
        line: "{{ item.key }} = {{ item.value }}"
      with_items:
        - { key: "hot_standby", value: "on" }
    
    - name: Stop PostgreSQL
      service:
        name: "postgresql"
        state: stopped

    - name: Remove existing data directory
      file:
        path: "{{ pg_data_dir }}"
        state: absent
        
    - name: Create directory
      ansible.builtin.file:
        path: "{{ pg_data_dir }}"
        state: directory
        owner: postgres
        group: postgres
        mode: '0700'    

    - name: Perform base backup from master
      become: yes
      shell: >
        sudo -u postgres -i PGPASSWORD='{{ postgresql_replication_password }}' pg_basebackup -h {{ hostvars['db-master']['ansible_ip'] }} -D {{ pg_data_dir }} -U {{ postgresql_replication_user }} -P -v -R 
          
    - name: Change owner and group 
      ansible.builtin.file:
        path: "{{ pg_data_dir }}"
        owner: "postgres"
        group: "postgres"
        recurse: yes
        state: directory      

    - name: Start PostgreSQL
      service:
        name: "postgresql"
        state: started
        enabled: yes