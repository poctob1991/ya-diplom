resource "yandex_compute_instance" "web" {
  count       = 2
  name        = "web-${count.index + 1}"
  platform_id = "standard-v2"
  zone        = var.yc_zone

  resources {
    cores  = 2
    memory = 4
  }

  boot_disk {
    initialize_params {
      image_id = "fd8vmcue7aajpmeo39kk" # Ubuntu 22.04
      size     = 20
    }
  }

  network_interface {
    subnet_id = yandex_vpc_subnet.subnet-1.id
    nat       = true
  }

  metadata = {
    ssh-keys = "${var.vm_user}:${file(var.ssh_public_key_path)}"
  }
}

resource "yandex_compute_instance" "db_primary" {
  name        = "db-primary"
  platform_id = "standard-v2"
  zone        = var.yc_zone

  resources {
    cores  = 4
    memory = 8
  }

  boot_disk {
    initialize_params {
      image_id = "fd8vmcue7aajpmeo39kk" # Ubuntu 22.04
      size     = 30
    }
  }

  network_interface {
    subnet_id = yandex_vpc_subnet.subnet-1.id
    nat       = true
  }

  metadata = {
    ssh-keys = "${var.vm_user}:${file(var.ssh_public_key_path)}"
  }
}

resource "yandex_compute_instance" "db_replica" {
  name        = "db-replica"
  platform_id = "standard-v2"
  zone        = var.yc_zone

  resources {
    cores  = 4
    memory = 8
  }

  boot_disk {
    initialize_params {
      image_id = "fd8vmcue7aajpmeo39kk" # Ubuntu 22.04
      size     = 30
    }
  }

  network_interface {
    subnet_id = yandex_vpc_subnet.subnet-1.id
    nat       = true
  }

  metadata = {
    ssh-keys = "${var.vm_user}:${file(var.ssh_public_key_path)}"
  }
}

resource "yandex_compute_instance" "lb" {
  name        = "load-balancer"
  platform_id = "standard-v2"
  zone        = var.yc_zone

  resources {
    cores  = 2
    memory = 4
  }

  boot_disk {
    initialize_params {
      image_id = "fd8vmcue7aajpmeo39kk" # Ubuntu 22.04
      size     = 20
    }
  }

  network_interface {
    subnet_id = yandex_vpc_subnet.subnet-1.id
    nat       = true
  }

  metadata = {
    ssh-keys = "${var.vm_user}:${file(var.ssh_public_key_path)}"
  }
}

resource "yandex_vpc_network" "network-1" {
  name = "mediawiki-network"
}

resource "yandex_vpc_subnet" "subnet-1" {
  name           = "mediawiki-subnet"
  zone           = var.yc_zone
  network_id     = yandex_vpc_network.network-1.id
  v4_cidr_blocks = ["192.168.10.0/24"]
}

resource "local_file" "ansible_inventory" {
  content = templatefile("${path.module}/templates/inventory.tpl", {
    web_ips    = yandex_compute_instance.web[*].network_interface.0.nat_ip_address,
    web_names  = yandex_compute_instance.web[*].name,
    db_primary = yandex_compute_instance.db_primary.network_interface.0.nat_ip_address,
    db_replica = yandex_compute_instance.db_replica.network_interface.0.nat_ip_address,
    lb_names  = yandex_compute_instance.lb.name,
    lb_ip      = yandex_compute_instance.lb.network_interface.0.nat_ip_address,
    ssh_user   = var.vm_user
  })
  filename = "../ansible/inventory.yml"
}